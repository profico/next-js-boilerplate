{
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "airbnb",
    "prettier",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:@profi.co/recommended"
  ],
  "plugins": ["import", "react-hooks", "prettier"],
  "settings": {
    "react": {
      "version": "detect",
      "pragma": "React"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./"
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".json"]
      }
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "globals": {
    "SegmentAnalytics": "readonly",
    "google": "readonly",
    "NodeJS": "readonly",
    "React": "readonly",
    "JSX": "readonly"
  },
  "rules": {
    "react/function-component-definition": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/no-unused-prop-types": "off",
    "@typescript-eslint/explicit-function-return-type": ["warn"],
    "react/jsx-filename-extension": ["warn", { "extensions": [".ts", ".tsx"] }],
    "react/jsx-props-no-spreading": "off",
    "import/prefer-default-export": "off",
    "import/named": ["error"],
    "import/namespace": ["error"],
    "import/default": ["error"],
    "import/export": ["error"],
    "react/state-in-constructor": "off",
    "react/static-property-placement": "off",
    "camelcase": "off",
    "curly": ["error", "all"],
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "react/jsx-curly-newline": "off",
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "required": {
          "some": ["nesting", "id"]
        }
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "@typescript-eslint/no-empty-function": "off",
    "react/sort-comp": "off",
    "react/jsx-wrap-multilines": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "import/no-dynamic-require": "off",
    "@typescript-eslint/no-var-requires": "off",
    "global-require": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.test.tsx", "next.config.js"]
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "@typescript-eslint/ban-types": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["warn"],
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": ["warn"],
    "react/jsx-one-expression-per-line": "off",
    "import/order": "off",
    "class-methods-use-this": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["warn"],
    "import/no-unresolved": "error",
    "no-restricted-globals": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[arguments.length=1] > MemberExpression.callee > Identifier.property[name='reduce']",
        "message": "Provide initialValue to .reduce(), or we get run-time crashes (yes, this has happened in production before)."
      }
    ],
    "@typescript-eslint/no-namespace": "off",
    "newline-before-return": "error",
    "padding-line-between-statements": "off",
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["const", "let", "var", "interface", "type", "function", "class"]
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["if", "while", "for"]
      },
      {
        "blankLine": "always",
        "prev": ["if", "while", "for"],
        "next": "*"
      }
    ],
    "no-continue": "off",
    "@typescript-eslint/quotes": [2, "single", { "avoidEscape": true }],
    "no-underscore-dangle": "off",
    "no-param-reassign": [
      "error",
      {
        "ignorePropertyModificationsFor": ["acc", "prev"]
      }
    ],
    "react/jsx-no-duplicate-props": [1, { "ignoreCase": false }]
  }
}
